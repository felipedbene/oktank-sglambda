{'TrainingJobName': 'vrp-oktank-logistics-2020-01-03-19-45-39-122', 'TrainingJobArn': 'arn:aws:sagemaker:us-east-1:803186506512:training-job/vrp-oktank-logistics-2020-01-03-19-45-39-122', 'ModelArtifacts': {'S3ModelArtifacts': 's3://vrp-sagemaker-us-east-1-803186506512/vrp-oktank-logistics-2020-01-03-19-45-39-122/output/model.tar.gz'}, 'TrainingJobStatus': 'Stopped', 'SecondaryStatus': 'MaxRuntimeExceeded', 'HyperParameters': {'sagemaker_container_log_level': '20', 'sagemaker_enable_cloudwatch_metrics': 'false', 'sagemaker_estimator': '"RLEstimator"', 'sagemaker_job_name': '"vrp-oktank-logistics-2020-01-03-19-45-39-122"', 'sagemaker_program': '"train_vehicle_routing_problem.py"', 'sagemaker_region': '"us-east-1"', 'sagemaker_s3_output': '"s3://vrp-sagemaker-us-east-1-803186506512/"', 'sagemaker_submit_directory': '"s3://vrp-sagemaker-us-east-1-803186506512/vrp-oktank-logistics-2020-01-03-19-45-39-122/source/sourcedir.tar.gz"'}, 'AlgorithmSpecification': {'TrainingImage': '520713654638.dkr.ecr.us-east-1.amazonaws.com/sagemaker-rl-tensorflow:ray0.6.5-gpu-py3', 'TrainingInputMode': 'File', 'MetricDefinitions': [{'Name': 'episode_reward_mean', 'Regex': 'episode_reward_mean: ([-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?)'}, {'Name': 'episode_reward_max', 'Regex': 'episode_reward_max: ([-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?)'}, {'Name': 'episode_reward_min', 'Regex': 'episode_reward_min: ([-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?)'}], 'EnableSageMakerMetricsTimeSeries': False}, 'RoleArn': 'arn:aws:iam::803186506512:role/service-role/AmazonSageMaker-ExecutionRole-20191125T103535', 'InputDataConfig': [], 'OutputDataConfig': {'KmsKeyId': '', 'S3OutputPath': 's3://vrp-sagemaker-us-east-1-803186506512/'}, 'ResourceConfig': {'InstanceType': 'ml.p3.2xlarge', 'InstanceCount': 1, 'VolumeSizeInGB': 30}, 'StoppingCondition': {'MaxRuntimeInSeconds': 300}, 'CreationTime': datetime.datetime(2020, 1, 3, 19, 45, 49, 798000, tzinfo=tzlocal()), 'TrainingStartTime': datetime.datetime(2020, 1, 3, 19, 48, 40, 524000, tzinfo=tzlocal()), 'TrainingEndTime': datetime.datetime(2020, 1, 3, 20, 1, 48, 670000, tzinfo=tzlocal()), 'LastModifiedTime': datetime.datetime(2020, 1, 3, 20, 1, 48, 670000, tzinfo=tzlocal()), 'SecondaryStatusTransitions': [{'Status': 'Starting', 'StartTime': datetime.datetime(2020, 1, 3, 19, 45, 49, 798000, tzinfo=tzlocal()), 'EndTime': datetime.datetime(2020, 1, 3, 19, 48, 40, 524000, tzinfo=tzlocal()), 'StatusMessage': 'Preparing the instances for training'}, {'Status': 'Downloading', 'StartTime': datetime.datetime(2020, 1, 3, 19, 48, 40, 524000, tzinfo=tzlocal()), 'EndTime': datetime.datetime(2020, 1, 3, 19, 48, 49, 255000, tzinfo=tzlocal()), 'StatusMessage': 'Downloading input data'}, {'Status': 'Training', 'StartTime': datetime.datetime(2020, 1, 3, 19, 48, 49, 255000, tzinfo=tzlocal()), 'EndTime': datetime.datetime(2020, 1, 3, 19, 58, 39, 472000, tzinfo=tzlocal()), 'StatusMessage': 'Training image download completed. Training in progress.'}, {'Status': 'Stopping', 'StartTime': datetime.datetime(2020, 1, 3, 19, 58, 39, 472000, tzinfo=tzlocal()), 'EndTime': datetime.datetime(2020, 1, 3, 20, 0, 55, 598000, tzinfo=tzlocal()), 'StatusMessage': 'Stopping the training job'}, {'Status': 'Uploading', 'StartTime': datetime.datetime(2020, 1, 3, 20, 0, 55, 598000, tzinfo=tzlocal()), 'EndTime': datetime.datetime(2020, 1, 3, 20, 1, 48, 670000, tzinfo=tzlocal()), 'StatusMessage': 'Uploading generated training model'}, {'Status': 'MaxRuntimeExceeded', 'StartTime': datetime.datetime(2020, 1, 3, 20, 1, 48, 670000, tzinfo=tzlocal()), 'EndTime': datetime.datetime(2020, 1, 3, 20, 1, 48, 670000, tzinfo=tzlocal()), 'StatusMessage': 'Training job runtime exceeded MaxRuntimeInSeconds provided'}], 'FinalMetricDataList': [{'MetricName': 'episode_reward_mean', 'Value': -5998.267578125, 'Timestamp': datetime.datetime(1970, 1, 19, 6, 21, 21, 620000, tzinfo=tzlocal())}, {'MetricName': 'episode_reward_max', 'Value': -5137.5712890625, 'Timestamp': datetime.datetime(1970, 1, 19, 6, 21, 21, 620000, tzinfo=tzlocal())}, {'MetricName': 'episode_reward_min', 'Value': -6670.2021484375, 'Timestamp': datetime.datetime(1970, 1, 19, 6, 21, 21, 620000, tzinfo=tzlocal())}], 'EnableNetworkIsolation': False, 'EnableInterContainerTrafficEncryption': False, 'EnableManagedSpotTraining': False, 'TrainingTimeInSeconds': 788, 'BillableTimeInSeconds': 788, 'DebugHookConfig': {'S3OutputPath': 's3://vrp-sagemaker-us-east-1-803186506512/', 'CollectionConfigurations': []}, 'ResponseMetadata': {'RequestId': '46b64649-291f-4363-976f-8f4f579ed4db', 'HTTPStatusCode': 200, 'HTTPHeaders': {'x-amzn-requestid': '46b64649-291f-4363-976f-8f4f579ed4db', 'content-type': 'application/x-amz-json-1.1', 'content-length': '3547', 'date': 'Mon, 06 Jan 2020 23:12:19 GMT'}, 'RetryAttempts': 0}}